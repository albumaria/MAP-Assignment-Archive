# 1
ExeStack:
Ref int v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)        
SymTable:
Out:
FileTable:
Heap:


# 1
ExeStack:
Ref int v1
int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)       
SymTable:
Out:
FileTable:
Heap:


# 1
ExeStack:
int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)       
SymTable:
v1 -> (0, int)
Out:
FileTable:
Heap:


# 1
ExeStack:
int cnt
new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)      
SymTable:
v1 -> (0, int)
Out:
FileTable:
Heap:


# 1
ExeStack:
new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)      
SymTable:
cnt -> 0
v1 -> (0, int)
Out:
FileTable:
Heap:


# 1
ExeStack:
new(v1, 1)
createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)     
SymTable:
cnt -> 0
v1 -> (0, int)
Out:
FileTable:
Heap:


# 1
ExeStack:
Ref int v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)        
SymTable:
Out:
FileTable:
Heap:


# 1
ExeStack:
Ref int v1
int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)       
SymTable:
Out:
FileTable:
Heap:


# 1
ExeStack:
int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)       
SymTable:
v1 -> (0, int)
Out:
FileTable:
Heap:


# 1
ExeStack:
int cnt
new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)      
SymTable:
v1 -> (0, int)
Out:
FileTable:
Heap:


# 1
ExeStack:
new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)      
SymTable:
cnt -> 0
v1 -> (0, int)
Out:
FileTable:
Heap:


# 1
ExeStack:
new(v1, 1)
createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)     
SymTable:
cnt -> 0
v1 -> (0, int)
Out:
FileTable:
Heap:


# 1
ExeStack:
createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)     
SymTable:
cnt -> 0
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
createSemaphore(cnt, rH(v1))
fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)    
SymTable:
cnt -> 0
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)    
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    )
fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 2
ExeStack:
acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     )
acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)  
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 2
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)  
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)  
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 2
ExeStack:
wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)  
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 3
ExeStack:
acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)    
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
acquire(cnt)
Print(rH(v1) - 1) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 2
ExeStack:
wH(v1, rH(v1) * 10)
Print(rH(v1)) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
acquire(cnt)
Print(rH(v1) - 1) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
Print(rH(v1)) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
acquire(cnt)
Print(rH(v1) - 1) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
Print(rH(v1))
release(cnt)
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
acquire(cnt)
Print(rH(v1) - 1) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
release(cnt)
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
acquire(cnt)
Print(rH(v1) - 1) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
Print(rH(v1) - 1) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
Print(rH(v1) - 1)
release(cnt)
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
wH(v1, rH(v1) * 10)
wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)  
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
release(cnt)
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 100


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 100


# 3
ExeStack:
wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)  
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 100


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 100


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 100


# 3
ExeStack:
wH(v1, rH(v1) * 2)
Print(rH(v1)) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 100


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 200


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 200


# 3
ExeStack:
Print(rH(v1)) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 200


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 200


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 200


# 3
ExeStack:
Print(rH(v1))
release(cnt)
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 200


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
200
FileTable:
Heap:
1 -> 200


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
200
FileTable:
Heap:
1 -> 200


# 3
ExeStack:
release(cnt)
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
200
FileTable:
Heap:
1 -> 200


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
200
FileTable:
Heap:
1 -> 200


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
200
FileTable:
Heap:
1 -> 200


# 3
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
200
FileTable:
Heap:
1 -> 200


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
200
FileTable:
Heap:
1 -> 200


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
200
FileTable:
Heap:
1 -> 200


# 3
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
200
FileTable:
Heap:
1 -> 200


# 1
ExeStack:
Ref int v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)        
SymTable:
Out:
FileTable:
Heap:


# 1
ExeStack:
Ref int v1
int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)       
SymTable:
Out:
FileTable:
Heap:


# 1
ExeStack:
int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)       
SymTable:
v1 -> (0, int)
Out:
FileTable:
Heap:


# 1
ExeStack:
int cnt
new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)      
SymTable:
v1 -> (0, int)
Out:
FileTable:
Heap:


# 1
ExeStack:
new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)      
SymTable:
cnt -> 0
v1 -> (0, int)
Out:
FileTable:
Heap:


# 1
ExeStack:
new(v1, 1)
createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)     
SymTable:
cnt -> 0
v1 -> (0, int)
Out:
FileTable:
Heap:


# 1
ExeStack:
createSemaphore(cnt, rH(v1)) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)     
SymTable:
cnt -> 0
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
createSemaphore(cnt, rH(v1))
fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)    
SymTable:
cnt -> 0
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    ) ; fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)    
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)    )
fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     ) ; acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 2
ExeStack:
acquire(cnt) ; wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
fork( acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)     )
acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)  
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 2
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)  
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
acquire(cnt) ; Print(rH(v1) - 1) ; release(cnt)  
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 2
ExeStack:
wH(v1, rH(v1) * 10) ; Print(rH(v1)) ; release(cnt)  
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 3
ExeStack:
acquire(cnt) ; wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)    
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
acquire(cnt)
Print(rH(v1) - 1) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 2
ExeStack:
wH(v1, rH(v1) * 10)
Print(rH(v1)) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 1


# 1
ExeStack:
acquire(cnt)
Print(rH(v1) - 1) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
Print(rH(v1)) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
acquire(cnt)
Print(rH(v1) - 1) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
Print(rH(v1))
release(cnt)
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
acquire(cnt)
Print(rH(v1) - 1) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
release(cnt)
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
acquire(cnt)
Print(rH(v1) - 1) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
Print(rH(v1) - 1) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
Print(rH(v1) - 1)
release(cnt)
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
release(cnt)
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
acquire(cnt)
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
wH(v1, rH(v1) * 10) ; wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)   
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 10


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 10


# 3
ExeStack:
wH(v1, rH(v1) * 10)
wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)  
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 10


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 100


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 100


# 3
ExeStack:
wH(v1, rH(v1) * 2) ; Print(rH(v1)) ; release(cnt)  
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 100


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 100


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 100


# 3
ExeStack:
wH(v1, rH(v1) * 2)
Print(rH(v1)) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 100


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 200


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 200


# 3
ExeStack:
Print(rH(v1)) ; release(cnt) 
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 200


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 200


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 200


# 3
ExeStack:
Print(rH(v1))
release(cnt)
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
FileTable:
Heap:
1 -> 200


# 1
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
200
FileTable:
Heap:
1 -> 200


# 2
ExeStack:
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
200
FileTable:
Heap:
1 -> 200


# 3
ExeStack:
release(cnt)
SymTable:
cnt -> 1
v1 -> (1, int)
Out:
10
9
200
FileTable:
Heap:
1 -> 200


